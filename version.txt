# X.Y.Z: X zaehlt nur alle paar jahre hoch, z.B. windows 20 mit 128 bit, Y ist PCIe version, Z minor version

4.1.2
- Change DLL API to use board_sel instead of drvno
- Cleanup DLL API
- Add continuous measurement to settings struct

4.1.1
- Transform board select and drvno:
	- drvno is now counting 0, 1, 2, 3, 4
	- board select is used bitwise, bit 0 selects board 0, bit 1 selects board 1 ...
	- 5 boards can now be select independently
- Split settings struct in measurement settings and camera settings
	- measurement settings are settings that are the same for all boards
	- camera settings are settings that are specific for every board
	- the camera settings struct is included 5 (MAXPCIEBOARDS) times in the measurement settings struct
- Escam got a new settings dialog according to the changes above. Also the other dialogs changed.

4.1.0
- Update PCIe board from 202.26 to 222.1 (new PCB: 2167-7)
- Remove setting parameter useDac
- Add control for DAC8568 at PCIe board extension PCB 2226-3 (EWS board)
	- rename function SendFLCAM_DAC to DAC8568_sendData
	- rename function DAC_setOutput to DAC8568_setOutput
	- rename function DAC_setAllOutputs to DAC8568_setAllOutputs
	- add function DAC8568_enableInternalReference
	- add parameter location to all DAC8568_* functions to choose between DAC in camera or DAC at PCIe board
	- invert logic for reordering channels in DAC8568_setAllOutputs
- Drop 'v' in version scheme, because there is no need for it

v3.26.8
- Set SEC register in init 3010
- Upgrade Windows SDK to 10.0.18362 and Platform Toolset to v142

v3.26.7
- remove file split mode

v3.26.6
- Fix write to disc, probably working now
- Add bit EN EC 3030 to SEC register
- Update Qt visual tool set to v304

v3.26.5
- Fix and improve write to disc
- Add verify data
- Change size of settings struct
- Add import settings dialog when no settings are found

v3.26.4
- Add setting parameter is_cooled_cam

v3.26.3
- Add write data to disc

v3.26.2
- Add Cam3030_ADC_SetIfcMode

v3.26.1
- Add SetSensorResetEarly
- Add I to tor out
- Add shortrs to settings dialog

v3.26.0
- Add sample mode and filter functions for ADC
- Improve control of sensor reset signal (IFC)
- Rename RS_MONITOR to EXPOSURE_WINDOW

v3.24.4
- Remove settings parameter useGPX and decide initialization of GPX by TDC bit
- Improve capitalzation of settings
- Extend TOR outputs

v3.24.3
- Improve names and parameters of high level board/DLL calls

v3.24.2
- Add DLLResetDSC, DLLSetDIRDSC and DLLGetDSC

v3.24.1
- Add DLLGetIsTdc and DLLGetIsDsc

v3.24.0
- Add Labview configurations. There are two build configurations in the visual studio solution now: Debug-Labview and Release-Labview.
	Debug-Labview: Debug configurations and Labview libraries are included for triggering events in Labview
	Release-Labview: Same as above, but release configurations
	Debug: Debug configurations and no Labview libraries are included. You can use this, when you want to use the DLL for other purposes e.g. Matlab. This option is needed to successfully compile the solution, when no Labview is installed on the computer, because then the Labview libraries are missing.
	Release: Same as above, but release configurations.
- Add setUseEC
- Fix TDC display
- Activate AboutGPX and fix it
- Remove DSC 3
- Add check for DSC and TDC flags

v3.23.0
-  bugfix in function copyRestData() of adress calculation (G.S.)

v3.22.2
-  bugfix in return address calculation fuer labview frame return 2nd cam in board.c function GetIndexOfPixel. Removed "+ 4" (A.M.)

v3.22.1
- Fix crash at exit with board sel = 3
- Add possibilty to add dummy data when no camera is found
- Improve SendFLCam: Add FindCam to SendFLCam
- Change default of Vfreq to 7
- Fix RMS calculation

v3.22.0
- The previous statement, that the new scan counter at the last pixel was introduced in P202_21 was false. P202_22 does that and this version is required to use software polling.
- Fix ValMsg and ErrorMsg
- Other small fixes

v3.21.1
- Add live view on linux
- Add Tocnt and Ticnt
- Fix some crashes
Escam:
- Improve dump registers dialog

v3.21.0
- Increase PCIe board version to P202_21
- There is an additional scan counter at the last pixel now. This is used in PollDmaBufferToUserBuffer.
- Measured: Software polling is possible up to 33 kHz. Measured with 3030, 1088 pixel

v3.20.6
- Improve software polling
- Improve escam settings dialog
- Add live view options to escam

v3.20.5
- Add software polling option
- Add live view

v3.20.4
- Add script for building .deb packages
- Improve README.md
- Fix DMA to user buffer copy process on linux
- Make Makefile of linux kernel module compatible with DKMS
- Change default file permissions of /dev/lscpcie0 to 666
- Add software flag COMPILE_FOR_LABVIEW

v3.20.3
- Add escam_setup
- Add dumpPciRegisters
- Add AboutSettings
- And more small fixes

v3.20.2
- Fix greyscale viewer (by fixing pro dlls global variables)
- Remove keep
- Improve dump tlp
- Improve order of StartStimer in startMeasurement
- Add continiousPauseInMicroseconds
escam:
- Add greyscale viewer
- Add setting import / export function

v3.20.1
- Refactor gain and gain to sensor_gain and adc_gain
The new sensor_gain is the old boolean gain. Sensor_gain is now an
unsigned integer, because the new 3030 IR sensor got 4 different gain modes.
Setting the sensor gain is moved to InitCameraGeneral.

v3.20.0
- Increase required PCIe board version: 202.20
- Add DLLIOCtrl_setOutput and DLLIOCtrl_setT0
- Add IOCtrl_setAllOutputs
- Improve SetDmaRegister: now all integer multiples of 64 are possible for pixelcount
- Add SetPriority and ResetPriority
- Improve StartMeasurements order and timing
- Change DLLSetupROI: replace automatic alternating keep order based on keep_first with manual keep order
Escam:
- Add BEC to setting dialog
- Add keep to setting dialog
- Improve setting dialog
- Add chopper options for BTI

v3.19.7
- Add time check in UIAbstractionLayer to prevent too many notifies
- Add function IOCtrl_setImpactStartPixel
- Add function IOCtrl_setOutput
- Add function IOCtrl_setT0
escam:
- Set ymax depending on camera system
- Fix bslope
- Fix dac_output board2

v3.19.6
- Rename lsc-gui to escam
DLL:
- Insert correct tabbing for register dump
escam:
- Make DAC compatible with two cams
- Hide board select when there is only one cam
- Improve dialogRMS: add board select and campos

v3.19.5
- Add DSC functions
- Remove CCDExamp
- Fix board sel functionality
- Allow different values for DACs on different boards
lsc-gui:
- Add DSC window
- Add RMS window

v3.19.4
- Fix two board functionality
- Change high level board functions from using drvno to using board_sel
Lsc-gui:
- Add live editable DAC window
- Make gui compatible with two boards

v3.19.3
- Readd check for keys:
	- Esc for abortion
	- Space for stop continuous
- Add DAC_setAllOutputs
- Add ValMsg
- Make Qt GUI compatible with Qt versions lower than 5.15
- Linux Kernel module is now probably compatible with kernel version >= 5
- Add setting isIR

v3.19.2
Lsc-gui:
- Make chart zoomable
- Add continuous mode
- Add settings level
- Add error messages for user
- Add dialog: cameras
- Add dialog: about
- Add dialog: about Qt
- Add dialog: axes
- Improve register dump dialog
- Improve dark mode
- Improve settings dialog

v3.19.0
- This version introduces complete crossplattform support (Linux + Windows)
- New project structure: one crossplattform Board.c is now used in ESLSCDLL, ESLSCDLL_pro and lsc-gui. CCDExamp is still using the deprecated Board_old
- Improve logging
- Add RsDSC
- lsc-gui: 
	- Add Tab in dump board registers for settings struct
	- Add some intelligence to settings dialog
	- Add feature for multiple cameras

v3.17.1
- Add DLLInitMeasurement

v3.17.0
- Introduce switch for software trigger on and off
- Merge Qt GUI project with mainline of EBST_CAM
- Add CCDExamp Setup project which creates an installer for CCDExamp
- More small fixes

v3.16.6.
- Introduce error handling: es_status_codes

v3.16.5
 - general init routine common for all cameras replaces (InitCam3001 in labview)
 - reduced InitCam3010 to cam specific parameters
 - added LedOff and SetGain function inclduing vias for LabView
 - removed old trigger config functions

v3.16.4
 - Function SetPartialBinning() must call WriteLongS0() before SetS0Bit()

v3.16.1
- with event on MeasureOn and BlockOn
- with delay stage counter

v3.15.7
- Add DLLCopyOneBlock
- Fix XCKDELAY
- Fix notifys beeing at wrong position
- Fix block trigger

v3.15.6
- Add new way to communicate from DLL to Labview (PostLVUserEvent)

v3.15.5
- Lots of refactoring. Rename nDLLSetupDMA to DLLSetMEasurementParameters
- CCDExamp: add TRMS for second camera
- Replace CCDExamples version numbers with global ones
- Add MANUAL_OVERRIDE_TLP+

v3.15.4
- Add workaround for measure on beeing reset too early

v3.15.3
- isr routine needs SubBufCounter which was reset by main loop - last DMA block not copied
- ReturnFrame has offset of 4 pixel to next scan

v3.15.2
- fix TRMS calculation in CCDExamp

v3.15.1
- reduce TLPS by 1

v3.14.0
- new version scheme: MAJOR VERSION . CORRESPONDING PCIe BOARD VERSION . MINOR VERSION
- new input scheme: BTI and STI
- change Bit ISR_Active from PCIEREG to IRQREG
- AboutS0 shows 4 memory slots more (TR - test register)
- Changed Sets0Bit and ResetS0Bit to use BitTestAndSet/BitTestAndReset and get more speed(old = 15microsec; new 3,5(+/-3)microsec)
- Added new Scan and Blocktrigger options in CCDExamp as an Dialog Window and changed dll function for that
- Add SetEC Dialog for CCDExamp
- Fix CalcTrms

v3.2.0
- Add functions SetBTimer, SetBSlope

v3.1.0
- Remove most parameters of ReadFFLoop
- Seperate setting s timer on and setting the time
- Add isBlockOn
- Add wairForBlockReady

v3.0.0
- new registers R16-19: BTIMER, BDAT, BEC, BFLAGS 
	- block trigger path is now completely independent from scan and got own registers
	- the scan has now SSLOPE SDAT and SEC and the block has BSLOPE BDAT and BEC
	- so the blocks and scans can be triggert independent.  
- new function: ClearAllUserRegs - resets the S and B regs to zero

v2.3.1
- Fix greyscale viewer not changing frame

v2.3.0
- Add function DLLisMeasureOn
- Add function DLLwaitForMeasureReady
- Control of BlockOn / BON will be moved to software:
	- Add function setBlockOn
	- Add function resetBlockOn
- Refactoring: Clarify blocktrigger cases
- Refactoring: Add enum PCIEFLAGS_bits
- Refactoring: extract function countBlocksByHardware

v2.2.0
- Add DLLCopyAllData

v2.1.1
- Remove sleep(100) from ReadFFLoopThread

v2.1.0
- Fix hDev not beeing initialized in pro DLL which led to partially not working pro DLL